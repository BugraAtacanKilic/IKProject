// <auto-generated />
using System;
using IKProject.DAL.Concrete.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IKProject.DAL.Migrations
{
    [DbContext(typeof(IKProjectDbContext))]
    [Migration("20220330091500_v2")]
    partial class v2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("IKProject.Model.Entities.Company", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<short>("ActiveUsersLimit")
                        .HasColumnType("smallint");

                    b.Property<short>("ActiveUsersNo")
                        .HasColumnType("smallint");

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LogoPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MailTag")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.HasKey("ID");

                    b.HasIndex("MailTag")
                        .IsUnique();

                    b.ToTable("Companys");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            ActiveUsersLimit = (short)5,
                            ActiveUsersNo = (short)5,
                            Adress = "Reşitpaşa Mah. Katar Cad. Teknokent ARI 3 No: 4 B3 Sarıyer / İstanbul.",
                            CreatedDate = new DateTime(2022, 3, 30, 12, 14, 58, 776, DateTimeKind.Local).AddTicks(9246),
                            Description = "Bilgeadam bir teknoloji şirketidir.",
                            IsActive = true,
                            LogoPath = "~\\assets\\img\\Companys\\1.png",
                            MailTag = "@bilgeadam.com",
                            ModifiedDate = new DateTime(2022, 3, 30, 12, 14, 58, 778, DateTimeKind.Local).AddTicks(1331),
                            Name = "Bilgeadam Teknoloji",
                            Phone = " 08502016000"
                        });
                });

            modelBuilder.Entity("IKProject.Model.Entities.Department", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("ID");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreatedDate = new DateTime(2022, 3, 30, 12, 14, 58, 781, DateTimeKind.Local).AddTicks(7962),
                            IsActive = true,
                            ModifiedDate = new DateTime(2022, 3, 30, 12, 14, 58, 781, DateTimeKind.Local).AddTicks(7996),
                            Name = "İnsan Kaynakları"
                        },
                        new
                        {
                            ID = 2,
                            CreatedDate = new DateTime(2022, 3, 30, 12, 14, 58, 781, DateTimeKind.Local).AddTicks(8835),
                            IsActive = true,
                            ModifiedDate = new DateTime(2022, 3, 30, 12, 14, 58, 781, DateTimeKind.Local).AddTicks(8841),
                            Name = "Yazılım"
                        },
                        new
                        {
                            ID = 3,
                            CreatedDate = new DateTime(2022, 3, 30, 12, 14, 58, 781, DateTimeKind.Local).AddTicks(8846),
                            IsActive = true,
                            ModifiedDate = new DateTime(2022, 3, 30, 12, 14, 58, 781, DateTimeKind.Local).AddTicks(8847),
                            Name = "Pazarlama"
                        });
                });

            modelBuilder.Entity("IKProject.Model.Entities.RolType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("ID");

                    b.ToTable("RolTypes");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreatedDate = new DateTime(2022, 3, 30, 12, 14, 58, 781, DateTimeKind.Local).AddTicks(9691),
                            IsActive = true,
                            ModifiedDate = new DateTime(2022, 3, 30, 12, 14, 58, 781, DateTimeKind.Local).AddTicks(9698),
                            Name = "Admin"
                        },
                        new
                        {
                            ID = 2,
                            CreatedDate = new DateTime(2022, 3, 30, 12, 14, 58, 782, DateTimeKind.Local).AddTicks(704),
                            IsActive = true,
                            ModifiedDate = new DateTime(2022, 3, 30, 12, 14, 58, 782, DateTimeKind.Local).AddTicks(710),
                            Name = "Şirket Yöneticisi"
                        },
                        new
                        {
                            ID = 3,
                            CreatedDate = new DateTime(2022, 3, 30, 12, 14, 58, 782, DateTimeKind.Local).AddTicks(716),
                            IsActive = true,
                            ModifiedDate = new DateTime(2022, 3, 30, 12, 14, 58, 782, DateTimeKind.Local).AddTicks(717),
                            Name = "Çalışan"
                        });
                });

            modelBuilder.Entity("IKProject.Model.Entities.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adress")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CompanyID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<bool>("EmailActiveUser")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Mail")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("PhotoUrlPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RolTypeID")
                        .HasColumnType("int");

                    b.Property<DateTime>("SendEmailTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TC")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ID");

                    b.HasIndex("CompanyID");

                    b.HasIndex("DepartmentID");

                    b.HasIndex("Mail")
                        .IsUnique()
                        .HasFilter("[Mail] IS NOT NULL");

                    b.HasIndex("RolTypeID");

                    b.HasIndex("TC")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Adress = "Kağıthane/İstanbul",
                            BirthDate = new DateTime(2022, 3, 30, 0, 0, 0, 0, DateTimeKind.Local),
                            CompanyID = 1,
                            CreatedDate = new DateTime(2022, 3, 30, 12, 14, 58, 782, DateTimeKind.Local).AddTicks(1506),
                            DepartmentID = 2,
                            EmailActiveUser = true,
                            IsActive = true,
                            Mail = "hasanserhatbayar@bilgeadam.com",
                            ModifiedDate = new DateTime(2022, 3, 30, 12, 14, 58, 782, DateTimeKind.Local).AddTicks(1513),
                            Name = "Hasan Serhat",
                            Password = "Abc123.",
                            PhoneNumber = "05554443696",
                            PhotoUrlPath = "~\\assets\\img\\Users\\1.jpg",
                            RolTypeID = 3,
                            SendEmailTime = new DateTime(2022, 3, 30, 0, 0, 0, 0, DateTimeKind.Local),
                            StartDate = new DateTime(2022, 3, 30, 0, 0, 0, 0, DateTimeKind.Local),
                            Surname = "Bayar",
                            TC = "46195695988",
                            Title = "Junior Yazılım Uzmanı"
                        },
                        new
                        {
                            ID = 2,
                            Adress = "Üsküdar/İstanbul",
                            BirthDate = new DateTime(2022, 3, 30, 0, 0, 0, 0, DateTimeKind.Local),
                            CompanyID = 1,
                            CreatedDate = new DateTime(2022, 3, 30, 12, 14, 58, 782, DateTimeKind.Local).AddTicks(7495),
                            DepartmentID = 1,
                            EmailActiveUser = true,
                            IsActive = true,
                            Mail = "gamzealtinelli@bilgeadam.com",
                            ModifiedDate = new DateTime(2022, 3, 30, 12, 14, 58, 782, DateTimeKind.Local).AddTicks(7501),
                            Name = "Gamze",
                            Password = "Abc123.",
                            PhoneNumber = "05456332568",
                            PhotoUrlPath = "~\\assets\\img\\Users\\2.jpg",
                            RolTypeID = 2,
                            SendEmailTime = new DateTime(2022, 3, 30, 0, 0, 0, 0, DateTimeKind.Local),
                            StartDate = new DateTime(2022, 3, 30, 0, 0, 0, 0, DateTimeKind.Local),
                            Surname = "Altınelli",
                            TC = "45687895321",
                            Title = "Senior Yazılım Uzmanı"
                        },
                        new
                        {
                            ID = 3,
                            Adress = "Beşiktaş/İstanbul",
                            BirthDate = new DateTime(2022, 3, 30, 0, 0, 0, 0, DateTimeKind.Local),
                            CompanyID = 1,
                            CreatedDate = new DateTime(2022, 3, 30, 12, 14, 58, 782, DateTimeKind.Local).AddTicks(7513),
                            DepartmentID = 2,
                            EmailActiveUser = true,
                            IsActive = true,
                            Mail = "tanerguler@bilgeadam.com",
                            ModifiedDate = new DateTime(2022, 3, 30, 12, 14, 58, 782, DateTimeKind.Local).AddTicks(7514),
                            Name = "Taner",
                            Password = "Abc123.",
                            PhoneNumber = "05442365898",
                            PhotoUrlPath = "~\\assets\\img\\Users\\3.jpg",
                            RolTypeID = 3,
                            SendEmailTime = new DateTime(2022, 3, 30, 0, 0, 0, 0, DateTimeKind.Local),
                            StartDate = new DateTime(2022, 3, 30, 0, 0, 0, 0, DateTimeKind.Local),
                            Surname = "Güler",
                            TC = "45698756235",
                            Title = "Junior Yazılım Uzmanı"
                        },
                        new
                        {
                            ID = 4,
                            Adress = "Kartal/İstanbul",
                            BirthDate = new DateTime(2022, 3, 30, 0, 0, 0, 0, DateTimeKind.Local),
                            CompanyID = 1,
                            CreatedDate = new DateTime(2022, 3, 30, 12, 14, 58, 782, DateTimeKind.Local).AddTicks(7521),
                            DepartmentID = 2,
                            EmailActiveUser = true,
                            IsActive = true,
                            Mail = "murathantandogan@bilgeadam.com",
                            ModifiedDate = new DateTime(2022, 3, 30, 12, 14, 58, 782, DateTimeKind.Local).AddTicks(7522),
                            Name = "Murathan",
                            Password = "Abc123.",
                            PhoneNumber = "05325659632",
                            PhotoUrlPath = "~\\assets\\img\\Users\\4.jpg",
                            RolTypeID = 3,
                            SendEmailTime = new DateTime(2022, 3, 30, 0, 0, 0, 0, DateTimeKind.Local),
                            StartDate = new DateTime(2022, 3, 30, 0, 0, 0, 0, DateTimeKind.Local),
                            Surname = "Tandoğan",
                            TC = "35698756985",
                            Title = "Junior"
                        },
                        new
                        {
                            ID = 5,
                            Adress = "Sarıyer/İstanbul",
                            BirthDate = new DateTime(2022, 3, 30, 0, 0, 0, 0, DateTimeKind.Local),
                            CompanyID = 1,
                            CreatedDate = new DateTime(2022, 3, 30, 12, 14, 58, 782, DateTimeKind.Local).AddTicks(7530),
                            DepartmentID = 3,
                            EmailActiveUser = true,
                            IsActive = true,
                            Mail = "yunussukrugulten@bilgeadam.com",
                            ModifiedDate = new DateTime(2022, 3, 30, 12, 14, 58, 782, DateTimeKind.Local).AddTicks(7531),
                            Name = "Yunus Şükrü",
                            Password = "Abc123.",
                            PhoneNumber = "05412327852",
                            PhotoUrlPath = "~\\assets\\img\\Users\\5.jpg",
                            RolTypeID = 3,
                            SendEmailTime = new DateTime(2022, 3, 30, 0, 0, 0, 0, DateTimeKind.Local),
                            StartDate = new DateTime(2022, 3, 30, 0, 0, 0, 0, DateTimeKind.Local),
                            Surname = "Gülten",
                            TC = "12365896321",
                            Title = "Pazarlama Uzmanı"
                        },
                        new
                        {
                            ID = 6,
                            Adress = "Çengelköy/İstanbul",
                            BirthDate = new DateTime(2022, 3, 30, 0, 0, 0, 0, DateTimeKind.Local),
                            CompanyID = 1,
                            CreatedDate = new DateTime(2022, 3, 30, 12, 14, 58, 782, DateTimeKind.Local).AddTicks(7539),
                            DepartmentID = 3,
                            EmailActiveUser = true,
                            IsActive = false,
                            Mail = "ahmetmuhsinoglu@bilgeadam.com",
                            ModifiedDate = new DateTime(2022, 3, 30, 12, 14, 58, 782, DateTimeKind.Local).AddTicks(7540),
                            Name = "Ahmet",
                            Password = "Abc123.",
                            PhoneNumber = "05345883211",
                            PhotoUrlPath = "~\\assets\\img\\Users\\6.jpg",
                            RolTypeID = 3,
                            SendEmailTime = new DateTime(2022, 3, 30, 0, 0, 0, 0, DateTimeKind.Local),
                            StartDate = new DateTime(2022, 3, 30, 0, 0, 0, 0, DateTimeKind.Local),
                            Surname = "Muhsinoğlu",
                            TC = "754232659852",
                            Title = "Pazarlama Uzman Yardımcısı"
                        },
                        new
                        {
                            ID = 7,
                            Adress = "Kadıköy/İstanbul",
                            BirthDate = new DateTime(2022, 3, 30, 0, 0, 0, 0, DateTimeKind.Local),
                            CompanyID = 1,
                            CreatedDate = new DateTime(2022, 3, 30, 12, 14, 58, 782, DateTimeKind.Local).AddTicks(7547),
                            DepartmentID = 2,
                            EmailActiveUser = true,
                            IsActive = false,
                            Mail = "serdaratay@bilgeadam.com",
                            ModifiedDate = new DateTime(2022, 3, 30, 12, 14, 58, 782, DateTimeKind.Local).AddTicks(7548),
                            Name = "Serdar",
                            Password = "Abc123.",
                            PhoneNumber = "05123336598",
                            PhotoUrlPath = "~\\assets\\img\\Users\\7.jpg",
                            RolTypeID = 3,
                            SendEmailTime = new DateTime(2022, 3, 30, 0, 0, 0, 0, DateTimeKind.Local),
                            StartDate = new DateTime(2022, 3, 30, 0, 0, 0, 0, DateTimeKind.Local),
                            Surname = "Atay",
                            TC = "25369856325",
                            Title = "Junior"
                        },
                        new
                        {
                            ID = 8,
                            Adress = "Çekmeköy/İstanbul",
                            BirthDate = new DateTime(2022, 3, 30, 0, 0, 0, 0, DateTimeKind.Local),
                            CompanyID = 1,
                            CreatedDate = new DateTime(2022, 3, 30, 12, 14, 58, 782, DateTimeKind.Local).AddTicks(7555),
                            DepartmentID = 2,
                            EmailActiveUser = true,
                            IsActive = false,
                            Mail = "kaanlokum@bilgeadam.com",
                            ModifiedDate = new DateTime(2022, 3, 30, 12, 14, 58, 782, DateTimeKind.Local).AddTicks(7556),
                            Name = "Kaan",
                            Password = "Abc123.",
                            PhoneNumber = "05235556321",
                            PhotoUrlPath = "~\\assets\\img\\Users\\8.jpg",
                            RolTypeID = 3,
                            SendEmailTime = new DateTime(2022, 3, 30, 0, 0, 0, 0, DateTimeKind.Local),
                            StartDate = new DateTime(2022, 3, 30, 0, 0, 0, 0, DateTimeKind.Local),
                            Surname = "Lokum",
                            TC = "45698965321",
                            Title = "Junior"
                        });
                });

            modelBuilder.Entity("IKProject.Model.Entities.User", b =>
                {
                    b.HasOne("IKProject.Model.Entities.Company", "Company")
                        .WithMany("Users")
                        .HasForeignKey("CompanyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IKProject.Model.Entities.Department", "Department")
                        .WithMany("Users")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IKProject.Model.Entities.RolType", "RolType")
                        .WithMany("Users")
                        .HasForeignKey("RolTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Department");

                    b.Navigation("RolType");
                });

            modelBuilder.Entity("IKProject.Model.Entities.Company", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("IKProject.Model.Entities.Department", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("IKProject.Model.Entities.RolType", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
